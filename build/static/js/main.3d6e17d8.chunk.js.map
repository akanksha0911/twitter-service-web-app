{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["StyledButton","styled","button","StyledTextArea","textarea","StyledActionArea","div","Line","App","useState","sendTweetInput","setSendTweetInput","getTweetInput","setGetTweetInput","removeTweetInput","setRemoveTweetInput","sendTweetResponse","setSendTweetResponse","getTweetResponse","setGetTweetResponse","removeTweetResponse","setRemoveTweetResponse","onSendClick","a","data","JSON","stringify","config","method","url","headers","Axios","res","id_str","onGetClick","text","onDeleteClick","style","display","value","onClick","placeholder","onChange","event","target","sourceType","screenName","options","height","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qUAMMA,EAAeC,IAAOC,OAAV,oIAQZC,EAAiBF,IAAOG,SAAV,gHAOdC,EAAmBJ,IAAOK,IAAV,4EAIhBC,EAAON,IAAOK,IAAV,8KAsJKE,MA9If,WAGI,MAA4CC,mBAAS,IAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAA0CF,mBAAS,IAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KACA,EAAgDJ,mBAAS,IAAzD,mBAAOK,EAAP,KAAyBC,EAAzB,KAGA,EAAkDN,mBAAS,IAA3D,mBAAOO,EAAP,KAA0BC,EAA1B,KACA,EAAgDR,mBAAS,IAAzD,mBAAOS,EAAP,KAAyBC,EAAzB,KACA,EAAsDV,mBAAS,IAA/D,mBAAOW,EAAP,KAA4BC,EAA5B,KAEMC,EAAW,uCAAG,gCAAAC,EAAA,sEAGNC,EAAOC,KAAKC,UAAU,CACxB,KAAQhB,IAGNiB,EAAS,CACXC,OAAQ,OACRC,IAAK,uEACLC,QAAS,CACL,eAAgB,oBAEpBN,KAAMA,GAbE,SAgBMO,IAAMJ,GAhBZ,OAgBNK,EAhBM,OAiBZf,EACI,iDAAmDe,EAAIR,KAAKS,OAAS,8BAAgCR,KAAKC,UAAUM,EAAIR,OAlBhH,gDAoBZP,EAAqBQ,KAAKC,UAAL,OApBT,yDAAH,qDA0BXQ,EAAU,uCAAG,gCAAAX,EAAA,sEAGLC,EAAOC,KAAKC,UAAU,CACxB,GAAMd,IAGJe,EAAS,CACXC,OAAQ,OACRC,IAAK,sEACLC,QAAS,CACL,eAAgB,oBAEpBN,KAAMA,GAbC,SAgBOO,IAAMJ,GAhBb,OAgBLK,EAhBK,OAiBXb,EAAoB,cAAgBM,KAAKC,UAAUM,EAAIR,KAAK,GAAGW,MAA3C,8BAA6FV,KAAKC,UAAUM,EAAIR,OAjBzH,gDAmBXL,EAAoBM,KAAKC,UAAL,OAnBT,yDAAH,qDAwBVU,EAAa,uCAAG,gCAAAb,EAAA,sEAGRC,EAAOC,KAAKC,UAAU,CACxB,GAAMZ,IAGJa,EAAS,CACXC,OAAQ,OACRC,IAAK,yEACLC,QAAS,CACL,eAAgB,oBAEpBN,KAAMA,GAbI,SAgBIO,IAAMJ,GAhBV,OAgBRK,EAhBQ,OAiBdX,EAAuB,sBAAwBI,KAAKC,UAAUM,EAAIR,KAAKW,MAAhD,6BAAiGV,KAAKC,UAAUM,EAAIR,OAjB7H,gDAmBdH,EAAuBI,KAAKC,UAAL,OAnBT,yDAAH,qDAwBnB,OACI,mCACI,sBAAKW,MAAO,CAACC,QAAS,QAAtB,UACI,gCACI,eAACjC,EAAD,WACI,cAACL,EAAD,4BACA,cAACG,EAAD,CAAgBoC,MAAO,mBACvB,cAACpC,EAAD,CAAgBoC,MAAO,2CAG3B,cAAChC,EAAD,IAEA,wHACA,cAACA,EAAD,IACA,eAACF,EAAD,WACI,cAACL,EAAD,CAAcwC,QAASlB,EAAvB,wBACA,cAACnB,EAAD,CACIsC,YAAa,gIACbC,SAAU,SAAAC,GACNhC,EAAkBgC,EAAMC,OAAOL,QAHvC,SAIQ7B,IACR,cAACP,EAAD,CAAgBoC,MAAOvB,OAI3B,eAACX,EAAD,WACI,cAACL,EAAD,CAAcwC,QAASN,EAAvB,uBACA,cAAC/B,EAAD,CACIsC,YAAa,uEACbC,SAAU,SAAAC,GACN9B,EAAiB8B,EAAMC,OAAOL,UAEtC,cAACpC,EAAD,CAAgBoC,MAAOrB,IAP3B,OAUA,eAACb,EAAD,WACI,cAACL,EAAD,CAAcwC,QAASJ,EAAvB,0BACA,cAACjC,EAAD,CAAgBsC,YAAa,8CAA+CC,SAAU,SAAAC,GAClF5B,EAAoB4B,EAAMC,OAAOL,UAErC,cAACpC,EAAD,CAAgBoC,MAAOnB,UAG/B,kGAEI,cAAC,IAAD,CACIyB,WAAW,UACXC,WAAW,kBACXC,QAAS,CAACC,OAAQ,gBC3J3BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3d6e17d8.chunk.js","sourcesContent":["import './App.css';\nimport styled from \"styled-components\";\nimport {useState} from \"react\";\nimport Axios from 'axios';\nimport {TwitterTimelineEmbed} from \"react-twitter-embed\";\n\nconst StyledButton = styled.button`\n  width: 20vw;\n  height: 10vh;\n  background: aliceblue;\n  border-radius: 40px;\n  margin-top: 25px;\n`;\n\nconst StyledTextArea = styled.textarea`\n  overflow-y: scroll;\n  width: 20vw;\n  height: 15vh;\n  background: aliceblue;\n\n`;\nconst StyledActionArea = styled.div`\n  display: inline-flex;\n  margin-bottom: 5vh;\n`\nconst Line = styled.div`\n  border-top: 15px solid grey;\n  -webkit-box-flex: 1;\n  -webkit-flex-grow: 1;\n  -ms-flex-positive: 1;\n  flex-grow: 1;\n  margin-bottom: 16px;;`\n\nfunction App() {\n\n\n    const [sendTweetInput, setSendTweetInput] = useState('');\n    const [getTweetInput, setGetTweetInput] = useState('');\n    const [removeTweetInput, setRemoveTweetInput] = useState('');\n\n\n    const [sendTweetResponse, setSendTweetResponse] = useState('');\n    const [getTweetResponse, setGetTweetResponse] = useState('');\n    const [removeTweetResponse, setRemoveTweetResponse] = useState('');\n\n    const onSendClick = async () => {\n        try {\n\n            const data = JSON.stringify({\n                \"text\": sendTweetInput\n            });\n\n            const config = {\n                method: 'post',\n                url: 'https://91yptvln44.execute-api.us-east-1.amazonaws.com/dev/sendTweet',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                data: data\n            };\n\n            const res = await Axios(config);\n            setSendTweetResponse(\n                \"id_str which can be used to retrieve tweet is \" + res.data.id_str + \"\\n \\n more info below \\n \\n\" + JSON.stringify(res.data))\n        } catch (e) {\n            setSendTweetResponse(JSON.stringify(e))\n\n        }\n    };\n\n\n    const onGetClick = async () => {\n        try {\n\n            const data = JSON.stringify({\n                \"id\": getTweetInput\n            });\n\n            const config = {\n                method: 'post',\n                url: 'https://91yptvln44.execute-api.us-east-1.amazonaws.com/dev/getTweet',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                data: data\n            };\n\n            const res = await Axios(config);\n            setGetTweetResponse(\"TWEET is : \" + JSON.stringify(res.data[0].text) + \" \\n \\n \" + \" more info below\" + \" \\n \" + JSON.stringify(res.data))\n        } catch (e) {\n            setGetTweetResponse(JSON.stringify(e))\n\n        }\n    };\n\n    const onDeleteClick = async () => {\n        try {\n\n            const data = JSON.stringify({\n                \"id\": removeTweetInput\n            });\n\n            const config = {\n                method: 'post',\n                url: 'https://91yptvln44.execute-api.us-east-1.amazonaws.com/dev/deleteTweet',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                data: data\n            };\n\n            const res = await Axios(config);\n            setRemoveTweetResponse(\"Deleted TWEET is : \" + JSON.stringify(res.data.text) + \" \\n \\n \" + \" more info below\" + \" \\n\" + JSON.stringify(res.data))\n        } catch (e) {\n            setRemoveTweetResponse(JSON.stringify(e))\n\n        }\n    };\n\n    return (\n        <>\n            <div style={{display: \"flex\"}}>\n                <div>\n                    <StyledActionArea>\n                        <StyledButton>ACTION BUTTON</StyledButton>\n                        <StyledTextArea value={'INPUT TEXTAREA'}></StyledTextArea>\n                        <StyledTextArea value={'SCROLLABLE OUTPUT TEXTAREA/RESPONSE'}></StyledTextArea>\n                    </StyledActionArea>\n\n                    <Line>\n                    </Line>\n                    <b> Please select from the options below and refer to the one above for illustration/usage</b>\n                    <Line/>\n                    <StyledActionArea>\n                        <StyledButton onClick={onSendClick}>SEND Tweet</StyledButton>\n                        <StyledTextArea\n                            placeholder={'please enter text and press button to send text as tweet. wait upto 1 minute for it to be shown on the right embedded twitter'}\n                            onChange={event => {\n                                setSendTweetInput(event.target.value)\n                            }}>{sendTweetInput}</StyledTextArea>\n                        <StyledTextArea value={sendTweetResponse}></StyledTextArea>\n                    </StyledActionArea>\n\n\n                    <StyledActionArea>\n                        <StyledButton onClick={onGetClick}>GET Tweet</StyledButton>\n                        <StyledTextArea\n                            placeholder={'please enter text and press button to get all tweets containing text'}\n                            onChange={event => {\n                                setGetTweetInput(event.target.value)\n                            }}></StyledTextArea>\n                        <StyledTextArea value={getTweetResponse}></StyledTextArea> </StyledActionArea>\n\n\n                    <StyledActionArea>\n                        <StyledButton onClick={onDeleteClick}>DELETE Tweet</StyledButton>\n                        <StyledTextArea placeholder={'please enter id of tweet you want to delete'} onChange={event => {\n                            setRemoveTweetInput(event.target.value)\n                        }}></StyledTextArea>\n                        <StyledTextArea value={removeTweetResponse}></StyledTextArea>\n                    </StyledActionArea>\n                </div>\n                <>\n                    Twitter feed (new tweets can take upto a minute to appear)\n                    <TwitterTimelineEmbed\n                        sourceType=\"profile\"\n                        screenName=\"AkankshaRawat09\"\n                        options={{height: 800}}\n                    />\n                </>\n            </div>\n        </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}